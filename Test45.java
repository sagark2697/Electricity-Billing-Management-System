import javax.swing.*;
import java.awt.*;

public class Test45 {
    private JPanel panel1;
    private JLabel label_one;
    private JTextArea textArea1;
    private JButton execute_button;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setMinimumSize(new Dimension(700, 400));
        panel1.setPreferredSize(new Dimension(800, 800));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(11, 11));
        panel2.setMinimumSize(new Dimension(250, 400));
        panel2.setPreferredSize(new Dimension(300, 400));
        panel1.add(panel2, BorderLayout.CENTER);
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setAlignmentX(1.0f);
        scrollPane1.setPreferredSize(new Dimension(330, 200));
        panel2.add(scrollPane1, BorderLayout.CENTER);
        textArea1 = new JTextArea();
        textArea1.setMargin(new Insets(0, 20, 0, 20));
        textArea1.setMinimumSize(new Dimension(250, 11));
        textArea1.setRows(10);
        scrollPane1.setViewportView(textArea1);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel3.setPreferredSize(new Dimension(84, 200));
        panel1.add(panel3, BorderLayout.SOUTH);
        execute_button = new JButton();
        execute_button.setText("Execute");
        panel3.add(execute_button);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        panel4.setPreferredSize(new Dimension(120, 30));
        panel1.add(panel4, BorderLayout.WEST);
        label_one = new JLabel();
        Font label_oneFont = this.$$$getFont$$$("Arial", Font.BOLD, 18, label_one.getFont());
        if (label_oneFont != null) label_one.setFont(label_oneFont);
        label_one.setHorizontalAlignment(2);
        label_one.setHorizontalTextPosition(10);
        label_one.setMinimumSize(new Dimension(124, 22));
        label_one.setPreferredSize(new Dimension(200, 20));
        label_one.setText("Write Query");
        label_one.setVerifyInputWhenFocusTarget(false);
        label_one.setVerticalAlignment(1);
        label_one.setVerticalTextPosition(1);
        panel4.add(label_one, BorderLayout.WEST);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        panel5.setMinimumSize(new Dimension(20, 300));
        panel5.setPreferredSize(new Dimension(100, 300));
        panel1.add(panel5, BorderLayout.EAST);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
